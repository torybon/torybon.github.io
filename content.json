{"meta":{"title":"文笔轨迹","subtitle":"bowen's blog","description":"Cheerleading any kind of inanimate object is silly","author":"bowen","url":"http://example.com","root":"/"},"pages":[{"title":"categories","date":"2021-12-26T15:12:24.000Z","updated":"2021-12-26T15:12:55.326Z","comments":false,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2021-12-26T08:35:07.000Z","updated":"2021-12-26T08:41:28.288Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"ArchLinux(2) dwm安装","slug":"ArchLinux(2)dwm安装","date":"2022-01-02T05:05:00.000Z","updated":"2022-01-02T07:41:10.872Z","comments":true,"path":"2022/01/02/ArchLinux(2)dwm安装/","link":"","permalink":"http://example.com/2022/01/02/ArchLinux(2)dwm%E5%AE%89%E8%A3%85/","excerpt":"Arch Linux自身不带有任何图形化界面，所以，可以在Arch上安装任何GUI,如：GNOME，KDE，xfce等。这些图形化界面都是以鼠标作为主要交互输入。而DWM是以键盘作为主要交互输入的。","text":"Arch Linux自身不带有任何图形化界面，所以，可以在Arch上安装任何GUI,如：GNOME，KDE，xfce等。这些图形化界面都是以鼠标作为主要交互输入。而DWM是以键盘作为主要交互输入的。 🔍 关联导航 ArchLinux 安装 ▶️ ArchLinux dwm安装 ⭐ 说明 Dwm是Xorg下的一个动态窗口管理器。采用平铺的布局方式。用C语言编写，被设计的目标是控制在2000行以下的代码。 Suckless Dwm 1 🌀 安装准备 确保此时已经联网，可以使用 nmtui 进行联网设置 新建非root用户，从此时开始，后续所有操作都在新建的非root用户上 1useradd -m -G wheel &#123;用户名&#125; dwm是基于Xorg的，并且需要从本地编译，所以需要安装必须的包 1sudo pacman -S xorg-server xorg-apps xorg-xinit base-devel 安装archlinuxcn支持，修改/etc/pacman.conf， 取消multilib的注释 在最后添加 12[archlinuxcn]Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch 更新pacman缓存 1sudo pacmnan -Syy 安装钥匙环 1sudo pacman -S archlinuxcn-keyring 2 🌀 下载dwm安装文件 下载官方源码（下载方式很多，只要能下载tar就行） 12sudo pacman -S w3mw3m suckless.org 获得：dwm-6.2.tar.gz，slstatus.tar.gz，slock-1.4.tar.gz，dmenu-5.0.tar.gz，st-0.8.4.tar.gz dwm dwm主体 slstatus dwm菜单栏 slock dwm锁屏 dmenu dwm默认启动器（后期替换） st dwm默认终端（后期替换） 解压 3 🌀 编译启动 进入每个组件的解压路径下，编译 12rm config.hsudo make clean install 新建 ~/.xinitrc，写入dwn启动命令 1exec dwm 执行命令 startx，就能看到最原始的dwm界面了","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"},{"name":"Linux","slug":"技术/Linux","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://example.com/tags/Linux/"},{"name":"Arch","slug":"Arch","permalink":"http://example.com/tags/Arch/"}]},{"title":"ArchLinux(1) 安装","slug":"ArchLinux(1)安装","date":"2022-01-01T03:30:00.000Z","updated":"2022-01-02T07:42:00.079Z","comments":true,"path":"2022/01/01/ArchLinux(1)安装/","link":"","permalink":"http://example.com/2022/01/01/ArchLinux(1)%E5%AE%89%E8%A3%85/","excerpt":"Arch Linux不是一个开箱即用的系统，安装过程相比windows或者Pop_OS!等Linux发行版而言都更加复杂。但是Arch Linux的安装过程可以看成是一个学习Linux的好机会。另外，Arch可以自身不带有桌面环境，只有愿意花时间配置，可以依据个人审美配置出各种风格的桌面环境。","text":"Arch Linux不是一个开箱即用的系统，安装过程相比windows或者Pop_OS!等Linux发行版而言都更加复杂。但是Arch Linux的安装过程可以看成是一个学习Linux的好机会。另外，Arch可以自身不带有桌面环境，只有愿意花时间配置，可以依据个人审美配置出各种风格的桌面环境。 🔍 关联导航 ▶️ ArchLinux 安装 ArchLinux dwm安装 ⭐ 说明 Arch Linux的安装没有图形化界面，完全依赖命令行操作 Arch Linux的发行非常积极，部分软件或者操作可能会存在过时的问题。此时请参照 Arch Wiki Arch Wiki Arch Wiki 中文版 1 🌀 安装准备 U盘：Arch Linux安装介质 安装环境：Dell E7450 U盘安装介质可以使用 Balena Etcher 如果要检查Arch对笔记本的支持程度，可以访问 Arch Wiki Laptop ❗️由于E7450的硬件环境是 i7-5600U ，不含有Nvidia独显，所以安装过程不会涉及Nvidia驱动支持。 2 🌀 安装检查 插入U盘启动介质，在Bios里设置U盘是第一启动项 在Bios里关闭安全启动(Security Boot) 检查笔记本是否支持UEFI启动： 在使用Arch启动介质启动之后，输入命令查看输出，如果有输出信息，说明主板支持UEFI模式。 1ls /sys/firmware/efi/efivars 3 🌀 联网设置 查看是否启动网络接口： 123ip link## 如果网卡没有被启用ip link set dev &#123;网卡名称&#125; up 连接wifi 12345iwctl[iwd] device list[iwd] station &#123;device name&#125; scan[iwd] station &#123;device name&#125; get-networks[iwd] station &#123;device name&#125; connect &#123;wifi SSID&#125; 验证网络连接 1ping baidu.com 4 🌀 校对时间 1timedatectl set-ntp true 5 🌀 硬盘分区 使用 fdisk -l 查看当前硬盘分区，确认当前硬盘编码，多为 /dev/sda 使用 cfdick /dev/sda 设置分区 EFI文件系统 EFI FAT 512M Linux交换分区 linux swap > 512M 根目录 linux 剩余空间 格式化分区 1234mkfs.fat -F32 /dev/sda1mkfs.xfs /dev/sda3mkswap /dev/sda2swapon /dev/sda2 挂载硬盘 123mount /dev/sda3 /mntmkdir /mnt/bootmount /dev/sda1 /mnt/boot 6 🌀 安装基本软件包 修改镜像源，修改 /etc/pacman.d/mirrorlist 文件 1234## 添加3行+ Server = https://mirrors.sjtug.sjtu.edu.cn/archlinux/$repo/os/$arch+ Server = https://mirror.redrock.team/archlinux/$repo/os/$arch+ Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch 安装基本软件包，内核，常规固件 1pacstrap /mnt linux linux-firmware base base-devel linux-headers vim networkmanager 🐞说明 安装命令里的 /mnt 是之前分区挂载时设定的路径，为了后续安装，不要使用 mnt 以外的名称 等待安装完成 7 🌀 其他设置 生成 fstab 1genfstab -U /mnt &gt;&gt; /mnt/etc/fstab change到新安装的系统 1arch-chroot /mnt 设置时区并同步时间 1234567ln -sf /usr/share/zoneinfo/Asia/shanghai /etc/localtimehwclock --systohcvim /etc/locale.gen&gt; 取消 en_US.UTF-8 UTF-8 和 zh_CN.UTF-8 UTF-8 的注释locale-gen 编辑语言 12vim /etc/locale.conf&gt; LANG=en_US.UTF-8 🐞说明 不要使用中文，可能会导致部分文字乱码 创建主机名，并在host中添加对应信息 12345echo &quot;&#123;主机名&#125;&quot; &gt;&gt; /etc/hostnamevim /etc/hosts&gt; 127.0.0.1 localhost&gt; ::1 localhost&gt; 127.0.0.1 &#123;主机名&#125;:localdomain &#123;主机名&#125; 设置root密码 1passwd 安装intal驱动 1pacman -S intel-ucode 🐞说明 仅intel用户安装 8 🌀 UEFI设置 安装 grub efi 启动管理工具 1pacman -S grub efibootmgr 生成grub efi 1grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB 生成UEFI引导文件 1grub-mkconfig -o /boot/grub/grub.cfg 9 🌀 额外设置 笔记本额外安装 1pacman -S iw wpa_supplicant dialog netctl dhcpcd服务 12systemctl enable dhcpcdsystemctl start dhcpcd 10 🌀 完成安装 exit 退出 chroot 环境 卸载被挂载的分区 1umount -R /mnt reboot 重启 在Bios中设置uefi启动，选择第8步生成的 grub.cfg 作为启动文件。","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"},{"name":"Linux","slug":"技术/Linux","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://example.com/tags/Linux/"},{"name":"Arch","slug":"Arch","permalink":"http://example.com/tags/Arch/"}]},{"title":"个人博客的起步(3) NexT主题美化","slug":"个人博客的起步:Hexo(3)","date":"2021-12-31T12:23:00.000Z","updated":"2022-01-02T07:41:55.152Z","comments":true,"path":"2021/12/31/个人博客的起步:Hexo(3)/","link":"","permalink":"http://example.com/2021/12/31/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%B5%B7%E6%AD%A5:Hexo(3)/","excerpt":"NexT 主题根据个人审美，可以进一步美化，现记录部分美化方式。","text":"NexT 主题根据个人审美，可以进一步美化，现记录部分美化方式。 🔍 关联导航 个人博客的起步：Hexo部署 个人博客的起步：NexT主题的应用 ▶️ 个人博客的起步：NexT主题的美化 🌀 基础文件说明 _config 文件是Hexo的基础配置文件 themes 存放下载的主题文件，如NexT themes/next/_config.yml 主题的配置文件 🌀 背景图片 新建hexo/source/_data/styles.styl，即在hexo目录的source文件夹下新建_data文件夹，文件夹中新建styles.styl，编辑： 1234567//背景图片设置body &#123; background-image: url(/images/background.jpg); background-repeat: no-repeat; background-attachment: fixed; background-size: 100% 100%;&#125; background-image:url 为图片路径，可以直接使用链接，也可以是图片路径（将自定义图片放入hexo\\public\\images路径下） background-repeat：若果背景图片不能全屏，那么是否平铺显示，充满屏幕 background-attachment：背景是否随着网页上下滚动而滚动，fixed 为固定 background-size：图片展示大小，这里设置 100%，100% 的意义为：如果背景图片不能全屏，那么是否通过拉伸的方式将背景强制拉伸至全屏显示 编辑主题配置文件hexo/themes/next/_config.yml 12custom_file_path: style: source/_data/styles.styl 🌀 文章透明 在styles.styl里添加如下内容： 123456789101112131415//文章内容的透明度设置.content-wrap &#123; opacity: 0.9;&#125;​//侧边框的透明度设置.sidebar &#123; background-color: transparent; opacity: 0.9;&#125;​//菜单栏的透明度设置.header-inner &#123; background: rgba(255,255,255,0.9);&#125; 🌀 边框圆角 与新建styles.styl类似，新建variables.styl 123// 圆角设置$border-radius-inner = 20px 20px 20px 20px;$border-radius = 20px; 编辑主题配置文件hexo/themes/next/_config.yml 12custom_file_path: variable: source/_data/variables.styl 🌀 Next7.x 黑暗模式 安装hexo-next-darkmode插件 1npm install hexo-next-darkmode --save 配置 Hexo 插件，在 Next 主题的 _config.yml 配置文件里添加以下内容 123456789101112131415darkmode_js: enable: true bottom: &#x27;32px&#x27; # default: &#x27;32px&#x27; right: &#x27;unset&#x27; # default: &#x27;32px&#x27; left: &#x27;32px&#x27; # default: &#x27;unset&#x27; time: &#x27;0.5s&#x27; # default: &#x27;0.3s&#x27; mixColor: &#x27;transparent&#x27; # default: &#x27;#100f2c&#x27; backgroundColor: &#x27;transparent&#x27; # default: &#x27;#100f2c&#x27; buttonColorDark: &#x27;#fff&#x27; # default: &#x27;#fff&#x27; buttonColorLight: &#x27;#100f2c&#x27; # default: &#x27;#100f2c&#x27; isActivated: false # default false saveInCookies: true # default: true label: &#x27;🌓&#x27; # default: &#x27;&#x27; autoMatchOsTheme: true # default: true libUrl: # Set custom library cdn url for Darkmode.js 关闭原生的暗黑模式，确保 Next 原生的 darkmode 选项设置为 false 🌀 设置首页和归档页的分页 安装必要的插件 12pm install --save hexo-generator-indexnpm install --save hexo-generator-archive 修改Hexo的配置文件hexo/blog/_config.yml 1234567891011# 这一段默认就有的index_generator: path: &#x27;&#x27; per_page: 5 order_by: -date# 新增对归档页面的分页设置archive_generator: per_page: 50 yearly: true monthly: true 修改超链接样式 修改 /home/bowen/hexo/blog/themes/next/source/css/_common/components/post，在最后添加 12345678910.post-body p a&#123; color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover &#123; color: #fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; &#125;&#125; 🌀 设置相关文章 引用：NexT侧边栏配置 在 themes/next/source/css/_common/outline/sidebar 下新增css sidebar-related.styl 123456789101112131415161718192021222324.sidebar-related &#123; font-size: $font-size-small; ol &#123; list-style-type: disc; margin: 0; padding: 0 2px 5px 25px; text-align: left; &#125;&#125;.sidebar-related-title &#123; margin-top: 20px; padding-left: 0; li &#123; border-bottom-color: $sidebar-highlight; color: $sidebar-highlight; border-bottom: 1px solid; cursor: pointer; display: inline-block; font-size: $font-size-small; &#125;&#125; 修改themes/next/source/css/_common/outline/sidebar/sidebar.styl 12 @import &#x27;sidebar-toc&#x27; if (hexo-config(&#x27;toc.enable&#x27;));+ @import &#x27;sidebar-related&#x27; if (hexo-config(&#x27;toc.enable&#x27;)); 在themes/next/layout/_partials/post/文件夹中添加post-related-sidebar.swig 1234567891011121314151617181920&#123;%- set popular_posts = popular_posts_json(theme.related_posts.params, page) %&#125;&#123;%- if page.toc.enable and theme.related_posts.enable and (theme.related_posts.display_in_home or not is_index) and popular_posts.json and popular_posts.json.length &gt; 0 %&#125;&lt;div&gt; &lt;ul class=&quot;sidebar-related-title&quot;&gt; &lt;li&gt; &#123;&#123; theme.related_posts.title or __(&#x27;post.related_posts&#x27;) &#125;&#125; &lt;/li&gt; &lt;/ul&gt; &lt;!--noindex--&gt; &lt;div class=&quot;sidebar-related&quot;&gt; &lt;ol&gt; &#123;%- for popular_post in popular_posts.json %&#125; &lt;li&gt;&lt;a href=&quot;&#123;&#123; popular_post.path &#125;&#125;&quot; rel=&quot;bookmark&quot;&gt;&lt;span class=&quot;nav-text&quot;&gt;&#123;&#123; popular_post.title &#125;&#125;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#123;%- endfor %&#125; &lt;/ol&gt; &lt;/div&gt; &lt;!--/noindex--&gt;&lt;/div&gt;&#123;%- endif %&#125; 修改侧边栏文件themes/next/layout/_macro/sidebar.swig 12345678910+ &lt;div&gt; &#123;%- set display_toc = page.toc.enable and display_toc %&#125; &#123;%- if display_toc %&#125; &#123;%- set toc = toc(page.content, &#123; &quot;class&quot;: &quot;nav&quot;, list_number: page.toc.number, max_depth: page.toc.max_depth &#125;) %&#125;@@ -36,6 +37,9 @@ &#123;&#123;- next_inject(&#x27;sidebar&#x27;) &#125;&#125; &lt;/div&gt;+ &lt;/div&gt;+ &#123;&#123; partial(&#x27;_partials/post/post-related-sidebar.swig&#x27;) &#125;&#125; 删除原始插件的文章结尾的关联文章展示，修改themes/next/layout/_macro/post.swig 123456- &#123;%- if theme.related_posts.enable and (theme.related_posts.display_in_home or not is_index) %&#125;- &#123;&#123; partial(&#x27;_partials/post/post-related.swig&#x27;) &#125;&#125;- &#123;%- endif %&#125; &#123;%- if not is_index %&#125; &#123;&#123;- next_inject(&#x27;postBodyEnd&#x27;) &#125;&#125;","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"},{"name":"Hexo","slug":"技术/Hexo","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://example.com/tags/Hexo/"},{"name":"nodejs","slug":"nodejs","permalink":"http://example.com/tags/nodejs/"}]},{"title":"VirtualBox Tips","slug":"VirtualBox Tips","date":"2021-12-30T14:47:38.511Z","updated":"2022-01-02T07:42:22.499Z","comments":true,"path":"2021/12/30/VirtualBox Tips/","link":"","permalink":"http://example.com/2021/12/30/VirtualBox%20Tips/","excerpt":"VirtualBox是开源软件，却做的像个闭源；VMware是闭源软件，却做的如同开源。 记录VirtualBox的部分操作tips。","text":"VirtualBox是开源软件，却做的像个闭源；VMware是闭源软件，却做的如同开源。 记录VirtualBox的部分操作tips。 🌀 网络设置 NAT网络 混杂模式全部允许 仅主机 混杂模式全部允许 如果能ping通，但是ssh不通，需要刷新一下MAC地址。点击MAC地址后面的刷新按钮 🌀 Virtual Box 本地迁移 迁移虚拟硬盘 迁移vbox配置","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"},{"name":"VirtualBox","slug":"技术/VirtualBox","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/VirtualBox/"}],"tags":[{"name":"VirtualBox","slug":"VirtualBox","permalink":"http://example.com/tags/VirtualBox/"},{"name":"Tips","slug":"Tips","permalink":"http://example.com/tags/Tips/"}]},{"title":"个人博客的起步(2) NexT主题应用","slug":"个人博客的起步:Hexo(2)","date":"2021-12-29T15:23:00.000Z","updated":"2022-01-02T07:41:43.436Z","comments":true,"path":"2021/12/29/个人博客的起步:Hexo(2)/","link":"","permalink":"http://example.com/2021/12/29/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%B5%B7%E6%AD%A5:Hexo(2)/","excerpt":"NexT 是 Hexo 框架中最为流行的主题之一。优点是简洁，定制度高，并且由于代码是开源的，所以有很多开发者维护。但是开箱后需要进行部分个性化配置","text":"NexT 是 Hexo 框架中最为流行的主题之一。优点是简洁，定制度高，并且由于代码是开源的，所以有很多开发者维护。但是开箱后需要进行部分个性化配置 🔍 关联导航 个人博客的起步：Hexo部署 ▶️ 个人博客的起步：NexT主题的应用 个人博客的起步：NexT主题的美化 🌀 NexT主题的安装 12345# 下载主题git clone git@github.com:theme-next/hexo-theme-next.git themes/next# 主题应用vim ~/hexo/blog/_config theme: next 🌀 基础配置 📖 修改头像 头像图片指向themes/next/source/images，修改主题配置文件 12345favicon: small: /images/logo-16x16.jpg medium: /images/logo-32x32.jpg apple_touch_icon: /images/apple-touch-icon-next.png safari_pinned_tab: /images/logo.svg 📖 修改样式模板 12345# Schemes #scheme: Muse #scheme: Mist #scheme: Pisces scheme: Gemini 新建hexo/source/_data/styles.styl，即在hexo目录的source文件夹下新建_data文件夹，文件夹中新建styles.styl，编辑： 1234567//背景图片设置body &#123; background-image: url(/images/background.jpg); background-repeat: no-repeat; background-attachment: fixed; background-size: 100% 100%;&#125; 🌀 文章布局 对文章的标题做设置： 1234567title: XXdate: 2021-01-01 01:01:01categories:- ctags:- tag1- tag2 文章默认按data倒序排序。 2. 在文章中添加 &lt;!--more--&gt; 标签，可以使之后的文章内容在首页被隐藏 3. 图片居中设置 1234## 居中&lt;center&gt;&lt;img src=&quot;/images/&#123;&#125;.png&quot; align=center/&gt;&lt;/center&gt; ## 居中，占比50&amp;&lt;center&gt;&lt;img src=&quot;/images/&#123;&#125;.png&quot; width=50% height=50% align=center/&gt;&lt;/center&gt;","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"},{"name":"Hexo","slug":"技术/Hexo","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://example.com/tags/Hexo/"},{"name":"nodejs","slug":"nodejs","permalink":"http://example.com/tags/nodejs/"}]},{"title":"windows10美化软件","slug":"windows10美化软件","date":"2021-12-28T13:36:00.000Z","updated":"2022-01-02T07:43:33.609Z","comments":true,"path":"2021/12/28/windows10美化软件/","link":"","permalink":"http://example.com/2021/12/28/windows10%E7%BE%8E%E5%8C%96%E8%BD%AF%E4%BB%B6/","excerpt":"美化的核心是简洁风格，并且不受系统更新影响。不使用非themepack主题包并且不修改注册表。记录部分美化软件和操作。","text":"美化的核心是简洁风格，并且不受系统更新影响。不使用非themepack主题包并且不修改注册表。记录部分美化软件和操作。 🌀 字体：更纱黑体 在浏览器中使用，等距更纱黑体SC 下载地址：https://github.com/be5invis/Sarasa-Gothic/releases 更新：应用商店可以下载 🌀 TranslucentTB 来源 作用 应用商店下载 任务栏透明 🌀 QuickLook 来源 作用 应用商店下载 空格键浏览文件 🌀 Listary 来源 作用 net 双击ctrl，全局搜索，自定义快捷键访问应用和网址 🌀 windows-folder-remark-master 来源 作用 net 文件 / 文件夹 添加备注，可以实现对文件夹的分类管理 使用时，只给文件夹添加备注，不对文件操作 文件夹添加备注，可以按备注进行分组，类似windows下载文件夹中的样式 核心是添加文件夹配置项，会将文件夹修改成受保护的系统操作文件 解除受保护的系统操作文件： 1234567891011121314151617attrib -s &quot;target folder&quot;## HELPattrib [&#123;+r | -r&#125;] [&#123;+a | -a&#125;] [&#123;+s | -s&#125;] [&#123;+h | -h&#125;]attrib [[Drive:][Path] FileName] [/s[/d]]参数+r 设置只读文件属性。-r 清除只读文件属性。+a 设置存档属性。-a 清除存档属性。+s 设置系统文件属性。-s 清除系统文件属性。+h 设置隐藏文件属性。-h 清除隐藏文件属性。/s 将 attrib 和任意命令行选项应用到当前目录及其所有子目录中的匹配文件。/d 将 attrib 和任意命令行选项应用到目录。/? 在命令提示符下显示帮助。 🌀 Files 目前不推荐，无法替代win+E快捷键 来源 作用 应用商店下载 代替系统文件浏览器，UI更美观 🌀 Lockscreen as wallpaper 来源 作用 应用商店下载 获取锁屏页面上的每日聚焦图片","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"},{"name":"Windows","slug":"技术/Windows","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/Windows/"}],"tags":[{"name":"Tips","slug":"Tips","permalink":"http://example.com/tags/Tips/"},{"name":"windows10","slug":"windows10","permalink":"http://example.com/tags/windows10/"}]},{"title":"VirtualBox下Linux扩容","slug":"VirtualBox下Linux扩容","date":"2021-12-27T15:06:15.223Z","updated":"2022-01-02T07:42:35.799Z","comments":true,"path":"2021/12/27/VirtualBox下Linux扩容/","link":"","permalink":"http://example.com/2021/12/27/VirtualBox%E4%B8%8BLinux%E6%89%A9%E5%AE%B9/","excerpt":"VirtualBox搭建的centOS 7.2 环境下，/dev/mapper/centos-root 空间不足，需要扩容。记录操作。","text":"VirtualBox搭建的centOS 7.2 环境下，/dev/mapper/centos-root 空间不足，需要扩容。记录操作。 1 🌀 root确认故障 12sudo -sdf -h 2 🌀 在虚拟机中添加一块物理的磁盘，重起虚拟机 1# 虚拟机设置界面中选中需要扩容的磁盘, 然后在右下方处点击扩展按钮, 即可启动扩展任务 3 🌀 查看磁盘编号 1234567891011121314151617181920212223242526[user@localhost ~]$ ls /dev/sd*/dev/sda /dev/sda1 /dev/sda2[root@localhost user]# fdisk -l磁盘 /dev/sda：16.1 GB, 16106127360 字节，31457280 个扇区Units = 扇区 of 1 * 512 = 512 bytes扇区大小(逻辑/物理)：512 字节 / 512 字节I/O 大小(最小/最佳)：512 字节 / 512 字节磁盘标签类型：dos磁盘标识符：0x000398a7 设备 Boot Start End Blocks Id System/dev/sda1 * 2048 2099199 1048576 83 Linux/dev/sda2 2099200 20971519 9436160 8e Linux LVM磁盘 /dev/mapper/centos-root：8585 MB, 8585740288 字节，16769024 个扇区Units = 扇区 of 1 * 512 = 512 bytes扇区大小(逻辑/物理)：512 字节 / 512 字节I/O 大小(最小/最佳)：512 字节 / 512 字节磁盘 /dev/mapper/centos-swap：1073 MB, 1073741824 字节，2097152 个扇区Units = 扇区 of 1 * 512 = 512 bytes扇区大小(逻辑/物理)：512 字节 / 512 字节I/O 大小(最小/最佳)：512 字节 / 512 字节 4 🌀 挂载 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950[root@localhost user]# fdisk /dev/sda欢迎使用 fdisk (util-linux 2.23.2)。更改将停留在内存中，直到您决定将更改写入磁盘。使用写入命令前请三思。命令(输入 m 获取帮助)：m命令操作 a toggle a bootable flag b edit bsd disklabel c toggle the dos compatibility flag d delete a partition g create a new empty GPT partition table G create an IRIX (SGI) partition table l list known partition types m print this menu n add a new partition o create a new empty DOS partition table p print the partition table q quit without saving changes s create a new empty Sun disklabel t change a partition&#x27;s system id u change display/entry units v verify the partition table w write table to disk and exit x extra functionality (experts only)命令(输入 m 获取帮助)：nPartition type: p primary (2 primary, 0 extended, 2 free) e extendedSelect (default p): p分区号 (3,4，默认 3)：3起始 扇区 (20971520-31457279，默认为 20971520)：将使用默认值 20971520Last 扇区, +扇区 or +size&#123;K,M,G&#125; (20971520-31457279，默认为 31457279)：将使用默认值 31457279分区 3 已设置为 Linux 类型，大小设为 5 GiB命令(输入 m 获取帮助)：wThe partition table has been altered!Calling ioctl() to re-read partition table.WARNING: Re-reading the partition table failed with error 16: 设备或资源忙.The kernel still uses the old table. The new table will be used atthe next reboot or after you run partprobe(8) or kpartx(8)正在同步磁盘。[root@localhost user]# 5 🌀 支持LVM 123456789101112131415161718192021222324252627282930313233343536373839404142[root@localhost user]# fdisk /dev/sda欢迎使用 fdisk (util-linux 2.23.2)。更改将停留在内存中，直到您决定将更改写入磁盘。使用写入命令前请三思。命令(输入 m 获取帮助)：m命令操作 a toggle a bootable flag b edit bsd disklabel c toggle the dos compatibility flag d delete a partition g create a new empty GPT partition table G create an IRIX (SGI) partition table l list known partition types m print this menu n add a new partition o create a new empty DOS partition table p print the partition table q quit without saving changes s create a new empty Sun disklabel t change a partition&#x27;s system id u change display/entry units v verify the partition table w write table to disk and exit x extra functionality (experts only)命令(输入 m 获取帮助)：t分区号 (1-3，默认 3)：3Hex 代码(输入 L 列出所有代码)：8e已将分区“Linux”的类型更改为“Linux LVM”命令(输入 m 获取帮助)：wThe partition table has been altered!Calling ioctl() to re-read partition table.WARNING: Re-reading the partition table failed with error 16: 设备或资源忙.The kernel still uses the old table. The new table will be used atthe next reboot or after you run partprobe(8) or kpartx(8)正在同步磁盘。 6 🌀 reboot &amp; 确认 1234567891011121314151617181920212223242526[root@localhost user]# reboot[root@localhost user]# fdisk -l磁盘 /dev/sda：16.1 GB, 16106127360 字节，31457280 个扇区Units = 扇区 of 1 * 512 = 512 bytes扇区大小(逻辑/物理)：512 字节 / 512 字节I/O 大小(最小/最佳)：512 字节 / 512 字节磁盘标签类型：dos磁盘标识符：0x000398a7 设备 Boot Start End Blocks Id System/dev/sda1 * 2048 2099199 1048576 83 Linux/dev/sda2 2099200 20971519 9436160 8e Linux LVM/dev/sda3 20971520 31457279 5242880 8e Linux LVM磁盘 /dev/mapper/centos-root：8585 MB, 8585740288 字节，16769024 个扇区Units = 扇区 of 1 * 512 = 512 bytes扇区大小(逻辑/物理)：512 字节 / 512 字节I/O 大小(最小/最佳)：512 字节 / 512 字节磁盘 /dev/mapper/centos-swap：1073 MB, 1073741824 字节，2097152 个扇区Units = 扇区 of 1 * 512 = 512 bytes扇区大小(逻辑/物理)：512 字节 / 512 字节I/O 大小(最小/最佳)：512 字节 / 512 字节 7 🌀 格式化该新添加的分区 123456789101112131415161718192021[root@localhost user]# mkfs -t ext3 /dev/sda3mke2fs 1.42.9 (28-Dec-2013)文件系统标签=OS type: Linux块大小=4096 (log=2)分块大小=4096 (log=2)Stride=0 blocks, Stripe width=0 blocks327680 inodes, 1310720 blocks65536 blocks (5.00%) reserved for the super user第一个数据块=0Maximum filesystem blocks=134217728040 block groups32768 blocks per group, 32768 fragments per group8192 inodes per groupSuperblock backups stored on blocks: 32768, 98304, 163840, 229376, 294912, 819200, 884736Allocating group tables: 完成正在写入inode表: 完成Creating journal (32768 blocks): 完成Writing superblocks and filesystem accounting information: 完成 8 🌀 确认根分区信息 12345678910111213141516171819202122232425262728293031323334353637383940414243[root@localhost user]# lvs LV VG Attr LSize Pool Origin Data% Meta% Move Log Cpy%Sync Convert root centos -wi-ao---- &lt;8.00g swap centos -wi-ao---- 1.00g[root@localhost user]# pvcreate /dev/sda3WARNING: ext3 signature detected on /dev/sda3 at offset 1080. Wipe it? [y/n]: y Wiping ext3 signature on /dev/sda3. Physical volume &quot;/dev/sda3&quot; successfully created.[root@localhost user]# df -h文件系统 容量 已用 可用 已用% 挂载点/dev/mapper/centos-root 8.0G 6.1G 1.9G 77% /devtmpfs 898M 0 898M 0% /devtmpfs 910M 0 910M 0% /dev/shmtmpfs 910M 9.6M 901M 2% /runtmpfs 910M 0 910M 0% /sys/fs/cgroup/dev/sda1 1014M 146M 869M 15% /boottmpfs 182M 0 182M 0% /run/user/0tmpfs 182M 0 182M 0% /run/user/1000[root@localhost user]# vgextend centos /dev/sda3 Volume group &quot;centos&quot; successfully extended[root@localhost user]# vgdisplay --- Volume group --- VG Name centos System ID Format lvm2 Metadata Areas 2 Metadata Sequence No 4 VG Access read/write VG Status resizable MAX LV 0 Cur LV 2 Open LV 2 Max PV 0 Cur PV 2 Act PV 2 VG Size 13.99 GiB PE Size 4.00 MiB Total PE 3582 Alloc PE / Size 2303 / &lt;9.00 GiB Free PE / Size 1279 / &lt;5.00 GiB VG UUID drQqLf-ibdG-E4IB-bAR1-ExjT-Ec6J-dUc3ts 9 🌀 向跟分区拓展 12345678910111213141516[root@localhost user]# lvextend -L +4.99G /dev/centos/root /dev/sda3 Rounding size to boundary between physical extents: 4.99 GiB. Size of logical volume centos/root changed from &lt;8.00 GiB (2047 extents) to &lt;12.99 GiB (3325 extents). Logical volume centos/root successfully resized.[root@localhost user]# xfs_growfs /dev/mapper/centos-rootmeta-data=/dev/mapper/centos-root isize=512 agcount=4, agsize=524032 blks = sectsz=512 attr=2, projid32bit=1 = crc=1 finobt=0 spinodes=0data = bsize=4096 blocks=2096128, imaxpct=25 = sunit=0 swidth=0 blksnaming =version 2 bsize=4096 ascii-ci=0 ftype=1log =internal bsize=4096 blocks=2560, version=2 = sectsz=512 sunit=0 blks, lazy-count=1realtime =none extsz=4096 blocks=0, rtextents=0data blocks changed from 2096128 to 3404800 10 🌀 check 12345678910[root@localhost user]# df -h文件系统 容量 已用 可用 已用% 挂载点/dev/mapper/centos-root 13G 6.1G 6.9G 47% /devtmpfs 898M 0 898M 0% /devtmpfs 910M 0 910M 0% /dev/shmtmpfs 910M 9.6M 901M 2% /runtmpfs 910M 0 910M 0% /sys/fs/cgroup/dev/sda1 1014M 146M 869M 15% /boottmpfs 182M 0 182M 0% /run/user/0tmpfs 182M 0 182M 0% /run/user/1000","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"},{"name":"VirtualBox","slug":"技术/VirtualBox","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/VirtualBox/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://example.com/tags/Linux/"},{"name":"VirtualBox","slug":"VirtualBox","permalink":"http://example.com/tags/VirtualBox/"}]},{"title":"Linux VS Windows","slug":"Linux VS Windows","date":"2021-12-26T14:57:34.986Z","updated":"2021-12-30T15:28:25.298Z","comments":true,"path":"2021/12/26/Linux VS Windows/","link":"","permalink":"http://example.com/2021/12/26/Linux%20VS%20Windows/","excerpt":"微软在更新了win11之后，再次成功的引起了一波声讨浪潮。好像每次的升级都会引发这样的讨论，就连win10的时候也不例外，而每次伴随着对新系统的批评，都会有人从windows转入Linux或者macOS，在将Linux日常使用一段时间之后，给出一个暴论：现阶段下，Linux替换windows的时机还未成熟。","text":"微软在更新了win11之后，再次成功的引起了一波声讨浪潮。好像每次的升级都会引发这样的讨论，就连win10的时候也不例外，而每次伴随着对新系统的批评，都会有人从windows转入Linux或者macOS，在将Linux日常使用一段时间之后，给出一个暴论：现阶段下，Linux替换windows的时机还未成熟。 linux is free only if your time is free Linux最大的问题在于软件的兼容性，由于windows和Linux的软件不互通，而部分软件只适配了windows版本，正是有鉴于此，才会有wine。 windows每次更新都会有人因为不适应新的系统而转入Linux，但是也总是会有人从Linux转回windows。在Linux上能做事，但是不一定能做好事。以office为例，在Linux上能够使用Libre Office，但是对于宏的支持没有Microsoft Office，Libre Office Excel还有行数限制，visio更是无从谈起。对于游戏的支持，使用wine，模拟器，Steam Proton兼容等方式能引导大部分游戏，但是这些游戏都需要花费时间配置。","categories":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://example.com/tags/Linux/"}]},{"title":"个人博客的起步(1) Hexo部署","slug":"个人博客的起步:Hexo(1)","date":"2021-12-25T15:23:00.000Z","updated":"2022-01-02T07:41:35.262Z","comments":true,"path":"2021/12/25/个人博客的起步:Hexo(1)/","link":"","permalink":"http://example.com/2021/12/25/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%B5%B7%E6%AD%A5:Hexo(1)/","excerpt":"Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上，是搭建博客的首选框架。另一方面，使用GitHub托管个人主页，最直观的优点就是：免费。省去了服务器的租借费用或者使用时的电费，非常的绿色。","text":"Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上，是搭建博客的首选框架。另一方面，使用GitHub托管个人主页，最直观的优点就是：免费。省去了服务器的租借费用或者使用时的电费，非常的绿色。 🔍 关联导航 ▶️ 个人博客的起步：Hexo部署 个人博客的起步：NexT主题的应用 个人博客的起步：NexT主题的美化 1 🌀 前言 最近下定决心，把原先写的一些东西归个档，迁移到博客上，最为新博客的第一篇文章，记录搭建过程再合适不过。 2 🌀 操作流程 GitHub GitHub上创建个人仓库 本地调试 本地安装Git，Nodejs，Hexo 部署推送 3 🌀 步骤实操 3.1 📖 GitHub上创建个人仓库 登录到GitHub，如果没有需要先注册用户。此处基于免费原则，假定是免费用户。 🐞 坑01 仓库命名：仓库的名称必须是 用户名.github.io，否则最终访问会报404。例如： torybon.github.io 🐞 坑02 免费用户的仓库必须要设置成开发仓库，否则不会对外暴露访问URL，付费用户才可以在私有仓库上对外暴露URL。 🐞 坑03 需要构造GitHub-SSH密钥 git本地设置 git config --global user.name “GitHub用户名” git config --global user.email “GitHub注册邮箱” 获取id_rsa.pub ssh-keygen -t rsa -C “GitHub注册邮箱” 打开GitHub，个人设定 -&gt; SSH and GPG keys -&gt; new SSH Key，将刚才构造的id_rsa.pub写入key 3.2 📖 本地安装Git，Nodejs，Hexo 本地系统是Arch Linux，使用pacman安装 12345pacman -S git nodejs-lts-gallium npm# git --version -&gt; git version 2.34.1# node -v -&gt; v16.13.1# npm -v -&gt; 8.3.0 使用npm命令安装Hexo，输入 123mkdir ~/hexocd ~/hexonpm install -g hexo-cli 安装完成后，初始化博客，输入 1hexo init blog 新建临时页面，检测Hexo 123hexo new test_my_sitehexo ghexo s 浏览器查看 1http://localhost:4000 后续全部的操作都在 hexo/blog 目录下进行 3.3 📖 Hexo常用命令 123456789101112131415npm install hexo -g #安装Hexonpm update hexo -g #升级hexo init #初始化博客命令简写hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章hexo g == hexo generate #生成hexo s == hexo server #启动服务预览hexo d == hexo deploy #部署hexo server #Hexo会监视文件变动并自动更新，无须重启服务器hexo server -s #静态模式hexo server -p 5000 #更改端口hexo server -i 192.168.1.1 #自定义 IPhexo clean #清除缓存，若是网页正常情况下可以忽略这条命令 3.4 📖 部署推送 在blog根目录里的 _config.yml 文件是站点核心配置文件：推送配置在这里修改 在文件的最下面的部分，填写GitHub的仓库路径 安装推送插件并且推送部署 1234npm install hexo-deployer-git --savehexo cleanhexo ghexo d 访问GitHub仓库页面，settings -&gt; pages。在这里能看到GitHub的发布URL。至此，初始的Blog构造并且发布完成。","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"},{"name":"Hexo","slug":"技术/Hexo","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://example.com/tags/Hexo/"},{"name":"nodejs","slug":"nodejs","permalink":"http://example.com/tags/nodejs/"}]}],"categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"},{"name":"Linux","slug":"技术/Linux","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/Linux/"},{"name":"Hexo","slug":"技术/Hexo","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/Hexo/"},{"name":"VirtualBox","slug":"技术/VirtualBox","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/VirtualBox/"},{"name":"Windows","slug":"技术/Windows","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/Windows/"},{"name":"随笔","slug":"随笔","permalink":"http://example.com/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://example.com/tags/Linux/"},{"name":"Arch","slug":"Arch","permalink":"http://example.com/tags/Arch/"},{"name":"Hexo","slug":"Hexo","permalink":"http://example.com/tags/Hexo/"},{"name":"nodejs","slug":"nodejs","permalink":"http://example.com/tags/nodejs/"},{"name":"VirtualBox","slug":"VirtualBox","permalink":"http://example.com/tags/VirtualBox/"},{"name":"Tips","slug":"Tips","permalink":"http://example.com/tags/Tips/"},{"name":"windows10","slug":"windows10","permalink":"http://example.com/tags/windows10/"}]}